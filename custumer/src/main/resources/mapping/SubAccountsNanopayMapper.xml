<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liquido.mapper.SubAccountsNanopayMapper">
  <resultMap id="BaseResultMap" type="com.liquido.entity.SubAccountsNanopay">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="parent_id" jdbcType="VARCHAR" property="parentId" />
    <result column="friendly_name" jdbcType="VARCHAR" property="friendlyName" />
    <result column="legal_name" jdbcType="VARCHAR" property="legalName" />
    <result column="external_bank_account" jdbcType="VARCHAR" property="externalBankAccount" />
    <result column="sub_account_uuid" jdbcType="VARCHAR" property="subAccountUuid" />
    <result column="extra_data" jdbcType="VARCHAR" property="extraData" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="account_id" jdbcType="VARCHAR" property="accountId" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="idempotency_key" jdbcType="VARCHAR" property="idempotencyKey" />
    <result column="mdn" jdbcType="VARCHAR" property="mdn" />
    <result column="is_prefab" jdbcType="BIT" property="isPrefab" />
    <result column="parent_clabe_id" jdbcType="VARCHAR" property="parentClabeId" />
    <result column="phone_number" jdbcType="VARCHAR" property="phoneNumber" />
    <result column="is_open" jdbcType="VARCHAR" property="isOpen" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, parent_id, friendly_name, legal_name, external_bank_account, sub_account_uuid, 
    extra_data, create_time, update_time, version, account_id, user_id, idempotency_key, 
    mdn, is_prefab, parent_clabe_id, phone_number, is_open
  </sql>
  <select id="selectByExample" parameterType="com.liquido.entity.SubAccountsNanopayExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sub_accounts_nanopay
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sub_accounts_nanopay
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sub_accounts_nanopay
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.liquido.entity.SubAccountsNanopayExample">
    delete from sub_accounts_nanopay
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.liquido.entity.SubAccountsNanopay">
    insert into sub_accounts_nanopay (id, parent_id, friendly_name, 
      legal_name, external_bank_account, sub_account_uuid, 
      extra_data, create_time, update_time, 
      version, account_id, user_id, 
      idempotency_key, mdn, is_prefab, 
      parent_clabe_id, phone_number, is_open
      )
    values (#{id,jdbcType=BIGINT}, #{parentId,jdbcType=VARCHAR}, #{friendlyName,jdbcType=VARCHAR}, 
      #{legalName,jdbcType=VARCHAR}, #{externalBankAccount,jdbcType=VARCHAR}, #{subAccountUuid,jdbcType=VARCHAR}, 
      #{extraData,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{version,jdbcType=INTEGER}, #{accountId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, 
      #{idempotencyKey,jdbcType=VARCHAR}, #{mdn,jdbcType=VARCHAR}, #{isPrefab,jdbcType=BIT}, 
      #{parentClabeId,jdbcType=VARCHAR}, #{phoneNumber,jdbcType=VARCHAR}, #{isOpen,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.liquido.entity.SubAccountsNanopay">
    insert into sub_accounts_nanopay
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="friendlyName != null">
        friendly_name,
      </if>
      <if test="legalName != null">
        legal_name,
      </if>
      <if test="externalBankAccount != null">
        external_bank_account,
      </if>
      <if test="subAccountUuid != null">
        sub_account_uuid,
      </if>
      <if test="extraData != null">
        extra_data,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="idempotencyKey != null">
        idempotency_key,
      </if>
      <if test="mdn != null">
        mdn,
      </if>
      <if test="isPrefab != null">
        is_prefab,
      </if>
      <if test="parentClabeId != null">
        parent_clabe_id,
      </if>
      <if test="phoneNumber != null">
        phone_number,
      </if>
      <if test="isOpen != null">
        is_open,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="friendlyName != null">
        #{friendlyName,jdbcType=VARCHAR},
      </if>
      <if test="legalName != null">
        #{legalName,jdbcType=VARCHAR},
      </if>
      <if test="externalBankAccount != null">
        #{externalBankAccount,jdbcType=VARCHAR},
      </if>
      <if test="subAccountUuid != null">
        #{subAccountUuid,jdbcType=VARCHAR},
      </if>
      <if test="extraData != null">
        #{extraData,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="idempotencyKey != null">
        #{idempotencyKey,jdbcType=VARCHAR},
      </if>
      <if test="mdn != null">
        #{mdn,jdbcType=VARCHAR},
      </if>
      <if test="isPrefab != null">
        #{isPrefab,jdbcType=BIT},
      </if>
      <if test="parentClabeId != null">
        #{parentClabeId,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null">
        #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="isOpen != null">
        #{isOpen,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.liquido.entity.SubAccountsNanopayExample" resultType="java.lang.Long">
    select count(*) from sub_accounts_nanopay
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sub_accounts_nanopay
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=VARCHAR},
      </if>
      <if test="record.friendlyName != null">
        friendly_name = #{record.friendlyName,jdbcType=VARCHAR},
      </if>
      <if test="record.legalName != null">
        legal_name = #{record.legalName,jdbcType=VARCHAR},
      </if>
      <if test="record.externalBankAccount != null">
        external_bank_account = #{record.externalBankAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.subAccountUuid != null">
        sub_account_uuid = #{record.subAccountUuid,jdbcType=VARCHAR},
      </if>
      <if test="record.extraData != null">
        extra_data = #{record.extraData,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=INTEGER},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.idempotencyKey != null">
        idempotency_key = #{record.idempotencyKey,jdbcType=VARCHAR},
      </if>
      <if test="record.mdn != null">
        mdn = #{record.mdn,jdbcType=VARCHAR},
      </if>
      <if test="record.isPrefab != null">
        is_prefab = #{record.isPrefab,jdbcType=BIT},
      </if>
      <if test="record.parentClabeId != null">
        parent_clabe_id = #{record.parentClabeId,jdbcType=VARCHAR},
      </if>
      <if test="record.phoneNumber != null">
        phone_number = #{record.phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.isOpen != null">
        is_open = #{record.isOpen,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sub_accounts_nanopay
    set id = #{record.id,jdbcType=BIGINT},
      parent_id = #{record.parentId,jdbcType=VARCHAR},
      friendly_name = #{record.friendlyName,jdbcType=VARCHAR},
      legal_name = #{record.legalName,jdbcType=VARCHAR},
      external_bank_account = #{record.externalBankAccount,jdbcType=VARCHAR},
      sub_account_uuid = #{record.subAccountUuid,jdbcType=VARCHAR},
      extra_data = #{record.extraData,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      version = #{record.version,jdbcType=INTEGER},
      account_id = #{record.accountId,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      idempotency_key = #{record.idempotencyKey,jdbcType=VARCHAR},
      mdn = #{record.mdn,jdbcType=VARCHAR},
      is_prefab = #{record.isPrefab,jdbcType=BIT},
      parent_clabe_id = #{record.parentClabeId,jdbcType=VARCHAR},
      phone_number = #{record.phoneNumber,jdbcType=VARCHAR},
      is_open = #{record.isOpen,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.liquido.entity.SubAccountsNanopay">
    update sub_accounts_nanopay
    <set>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="friendlyName != null">
        friendly_name = #{friendlyName,jdbcType=VARCHAR},
      </if>
      <if test="legalName != null">
        legal_name = #{legalName,jdbcType=VARCHAR},
      </if>
      <if test="externalBankAccount != null">
        external_bank_account = #{externalBankAccount,jdbcType=VARCHAR},
      </if>
      <if test="subAccountUuid != null">
        sub_account_uuid = #{subAccountUuid,jdbcType=VARCHAR},
      </if>
      <if test="extraData != null">
        extra_data = #{extraData,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="idempotencyKey != null">
        idempotency_key = #{idempotencyKey,jdbcType=VARCHAR},
      </if>
      <if test="mdn != null">
        mdn = #{mdn,jdbcType=VARCHAR},
      </if>
      <if test="isPrefab != null">
        is_prefab = #{isPrefab,jdbcType=BIT},
      </if>
      <if test="parentClabeId != null">
        parent_clabe_id = #{parentClabeId,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null">
        phone_number = #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="isOpen != null">
        is_open = #{isOpen,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.liquido.entity.SubAccountsNanopay">
    update sub_accounts_nanopay
    set parent_id = #{parentId,jdbcType=VARCHAR},
      friendly_name = #{friendlyName,jdbcType=VARCHAR},
      legal_name = #{legalName,jdbcType=VARCHAR},
      external_bank_account = #{externalBankAccount,jdbcType=VARCHAR},
      sub_account_uuid = #{subAccountUuid,jdbcType=VARCHAR},
      extra_data = #{extraData,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=INTEGER},
      account_id = #{accountId,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      idempotency_key = #{idempotencyKey,jdbcType=VARCHAR},
      mdn = #{mdn,jdbcType=VARCHAR},
      is_prefab = #{isPrefab,jdbcType=BIT},
      parent_clabe_id = #{parentClabeId,jdbcType=VARCHAR},
      phone_number = #{phoneNumber,jdbcType=VARCHAR},
      is_open = #{isOpen,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>